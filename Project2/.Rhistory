data = training
)
summary(model)
plot(model)
avPlots(model)
vif(model)
# type factor
facebook$`Type` <- factor(facebook$`Type`)
str(facebook$`Type`)
# month factor
month_names <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun" , "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
facebook$`Post Month` <- factor(facebook$`Post Month`, levels = 1:12, labels = month_names)
plot(density(facebook_enum["Lifetime.Post.Consumers"]))
plot(density(facebook_enum[["Lifetime.Post.Consumers"]]))
plot(density(facebook_enum["Page.total.likes"]))
plot(density(facebook_enum[["Lifetime.Post.Consumers"]]))
plot(density(facebook_enum[["Page.total.likes"]]))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
plot(density(facebook_enum[log(["Lifetime.Post.Consumers"])]))
plot(density(facebook_enum[[log("Lifetime.Post.Consumers")]]))
plot(density(log(facebook_enum[["Lifetime.Post.Consumers"]])))
plot(density(log(facebook_enum[["Page.total.likes"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
plot(density(log(facebook_enum[["Lifetime.Post.Consumers"]])))
plot(density(sqrt(facebook_enum[["Page.total.likes"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
# Assuming 'facebook' is your data frame
scatterplotMatrix(facebook_enum[, c(
log("Lifetime.Post.Consumers"),
"Page.total.likes",
"Category",
"Type",
"Post.Month",
"Post.Hour",
"Post.Weekday",
"Paid"
)])
facebook_enum <- facebook
head(facebook_enum)
facebook_enum[["Lifetime.Post.Consumers"]] <- log(facebook_enum[["Lifetime.Post.Consumers"]])
facebook_enum[["Page.total.likes"]] <- log(facebook_enum[["Page.total.likes"]])
facebook_enum[["Category"]] <- as.integer(as.factor(facebook_enum[["Category"]]))
facebook_enum[["Type"]] <- as.integer(as.factor(facebook_enum[["Type"]]))
facebook_enum[["Post.Month"]] <- as.integer(as.factor(facebook_enum[["Post.Month"]]))
facebook_enum[["Post.Hour"]] <- as.integer(as.factor(facebook_enum[["Post.Hour"]]))
facebook_enum[["Post.Weekday"]] <- as.integer(as.factor(facebook_enum[["Post.Weekday"]]))
facebook_enum[["Paid"]] <- as.integer(as.factor(facebook_enum[["Paid"]]))
head(facebook_enum)
plot(density(log(facebook_enum[["Lifetime.Post.Consumers"]])))
plot(density(sqrt(facebook_enum[["Page.total.likes"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
plot(density(sqrt(facebook_enum[["Lifetime.Post.Consumers"]])))
plot(density(sqrt(facebook_enum[["Page.total.likes"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
plot(density(log(facebook_enum[["Lifetime.Post.Consumers"]])))
plot(density(log(facebook_enum[["Page.total.likes"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
plot(density(sqrt(facebook_enum[["Lifetime.Post.Consumers"]])))
plot(density(sqrt(facebook_enum[["Page.total.likes"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
plot(density(sqrt(facebook_enum[["Lifetime.Post.Consumers"]])))
plot(density((facebook_enum[["Page.total.likes"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
facebook_enum <- facebook
head(facebook_enum)
facebook_enum[["Lifetime.Post.Consumers"]] <- sqrt(facebook_enum[["Lifetime.Post.Consumers"]])
facebook_enum[["Page.total.likes"]] <- sqrt(facebook_enum[["Page.total.likes"]])
facebook_enum[["Category"]] <- as.integer(as.factor(facebook_enum[["Category"]]))
facebook_enum[["Type"]] <- as.integer(as.factor(facebook_enum[["Type"]]))
facebook_enum[["Post.Month"]] <- as.integer(as.factor(facebook_enum[["Post.Month"]]))
facebook_enum[["Post.Hour"]] <- as.integer(as.factor(facebook_enum[["Post.Hour"]]))
facebook_enum[["Post.Weekday"]] <- as.integer(as.factor(facebook_enum[["Post.Weekday"]]))
facebook_enum[["Paid"]] <- as.integer(as.factor(facebook_enum[["Paid"]]))
head(facebook_enum)
# Assuming 'facebook' is your data frame
scatterplotMatrix(facebook_enum[, c(
log("Lifetime.Post.Consumers"),
"Page.total.likes",
"Category",
"Type",
"Post.Month",
"Post.Hour",
"Post.Weekday",
"Paid"
)])
# Assuming 'facebook' is your data frame
scatterplotMatrix(facebook_enum[, c(
"Lifetime.Post.Consumers",
"Page.total.likes",
"Category",
"Type",
"Post.Month",
"Post.Hour",
"Post.Weekday",
"Paid"
)])
training <- subset(facebook_enum, obs_type="Training")
test <- subset(facebook_enum, obs_type="Validation")
model = lm(
`Lifetime.Post.Consumers` ~
`Page.total.likes` +
`Category` +
`Type` +
`Post.Month` +
`Post.Hour` +
`Post.Weekday` +
`Paid`,
data = training
)
summary(model)
plot(model)
avPlots(model)
vif(model)
facebook_enum <- facebook
head(facebook_enum)
facebook_enum[sqrt_lt_pc] <- sqrt(facebook_enum[["Lifetime.Post.Consumers"]])
facebook_enum <- facebook
head(facebook_enum)
facebook_enum[sqrt_lt_pc] <- NA
facebook_enum <- facebook
head(facebook_enum)
facebook_enum["sqrt_lt_pc"] <- NA
facebook_enum[sqrt_lt_pc] <- sqrt(facebook_enum[["Lifetime.Post.Consumers"]])
facebook_enum <- facebook
head(facebook_enum)
facebook_enum["sqrt_lt_pc"] <- NA
facebook_enum["sqrt_lt_pc"] <- sqrt(facebook_enum[["Lifetime.Post.Consumers"]])
facebook_enum["sqrt_ptl"] <- NA
facebook_enum[["sqrt_ptl"]] <- sqrt(facebook_enum[["Page.total.likes"]])
facebook_enum[["Category"]] <- as.integer(as.factor(facebook_enum[["Category"]]))
facebook_enum[["Type"]] <- as.integer(as.factor(facebook_enum[["Type"]]))
facebook_enum[["Post.Month"]] <- as.integer(as.factor(facebook_enum[["Post.Month"]]))
facebook_enum[["Post.Hour"]] <- as.integer(as.factor(facebook_enum[["Post.Hour"]]))
facebook_enum[["Post.Weekday"]] <- as.integer(as.factor(facebook_enum[["Post.Weekday"]]))
facebook_enum[["Paid"]] <- as.integer(as.factor(facebook_enum[["Paid"]]))
head(facebook_enum)
plot(density(sqrt(facebook_enum[["sqrt_lt_pc"]])))
plot(density(sqrt(facebook_enum[["sqrt_ptl"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
# Assuming 'facebook' is your data frame
scatterplotMatrix(facebook_enum[, c(
"sqrt_lt_pc",
"sqrt_ptl",
"Category",
"Type",
"Post.Month",
"Post.Hour",
"Post.Weekday",
"Paid"
)])
training <- subset(facebook_enum, obs_type="Training")
test <- subset(facebook_enum, obs_type="Validation")
model = lm(
`sqrt_lt_pc` ~
`sqrt_ptl` +
`Category` +
`Type` +
`Post.Month` +
`Post.Hour` +
`Post.Weekday` +
`Paid`,
data = training
)
knitr::opts_chunk$set(warning = FALSE)
setwd("C:/Users/jackw/Documents/R/Project")
# install.packages("car")
# install.packages("ggplot")
library(car)
library(ggplot2)
# library(GGally)
library(readr)
facebook <- na.omit(read_delim("facebook_updated.csv",
delim = ",", escape_double = FALSE, trim_ws = TRUE))
View(facebook)
column_names <- names(facebook)
print(column_names)
facebook_enum <- facebook
head(facebook_enum)
facebook_enum["sqrt_lt_pc"] <- NA
facebook_enum["sqrt_lt_pc"] <- sqrt(facebook_enum[["Lifetime.Post.Consumers"]])
facebook_enum["sqrt_ptl"] <- NA
facebook_enum[["sqrt_ptl"]] <- sqrt(facebook_enum[["Page.total.likes"]])
facebook_enum[["Category"]] <- as.integer(as.factor(facebook_enum[["Category"]]))
facebook_enum[["Type"]] <- as.integer(as.factor(facebook_enum[["Type"]]))
facebook_enum[["Post.Month"]] <- as.integer(as.factor(facebook_enum[["Post.Month"]]))
facebook_enum[["Post.Hour"]] <- as.integer(as.factor(facebook_enum[["Post.Hour"]]))
facebook_enum[["Post.Weekday"]] <- as.integer(as.factor(facebook_enum[["Post.Weekday"]]))
facebook_enum[["Paid"]] <- as.integer(as.factor(facebook_enum[["Paid"]]))
head(facebook_enum)
plot(density(sqrt(facebook_enum[["sqrt_lt_pc"]])))
plot(density(sqrt(facebook_enum[["sqrt_ptl"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
# Assuming 'facebook' is your data frame
scatterplotMatrix(facebook_enum[, c(
"sqrt_lt_pc",
"sqrt_ptl",
"Category",
"Type",
"Post.Month",
"Post.Hour",
"Post.Weekday",
"Paid"
)])
training <- subset(facebook_enum, obs_type="Training")
test <- subset(facebook_enum, obs_type="Validation")
model = lm(
`sqrt_lt_pc` ~
`sqrt_ptl` +
`Category` +
`Type` +
`Post.Month` +
`Post.Hour` +
`Post.Weekday` +
`Paid`,
data = training
)
summary(model)
plot(model)
avPlots(model)
vif(model)
# normalizing likes
facebook$like[is.na(facebook$like)] <- 0
facebook$log_like <- NA
facebook$log_like <- log(facebook$`like`)
facebook$like[facebook$like=='-Inf'] <- 0
# normalizing `Lifetime Post Total Reach`
facebook$lt_post_tot_reach <- NA
facebook$lt_post_tot_reach <- log(facebook$`Lifetime Post Total Reach`)
knitr::opts_chunk$set(warning = FALSE)
setwd("C:/Users/jackw/Documents/R/Project")
# install.packages("car")
# install.packages("ggplot")
library(car)
library(ggplot2)
# library(GGally)
library(readr)
facebook <- na.omit(read_delim("facebook_updated.csv",
delim = ",", escape_double = FALSE, trim_ws = TRUE))
View(facebook)
column_names <- names(facebook)
print(column_names)
facebook_enum <- facebook
head(facebook_enum)
facebook_enum["sqrt_lt_pc"] <- NA
facebook_enum["sqrt_lt_pc"] <- sqrt(facebook_enum[["Lifetime.Post.Consumers"]])
facebook_enum["sqrt_ptl"] <- NA
facebook_enum[["sqrt_ptl"]] <- sqrt(facebook_enum[["Page.total.likes"]])
facebook_enum[["Category"]] <- as.integer(as.factor(facebook_enum[["Category"]]))
facebook_enum[["Type"]] <- as.integer(as.factor(facebook_enum[["Type"]]))
facebook_enum[["Post.Month"]] <- as.integer(as.factor(facebook_enum[["Post.Month"]]))
facebook_enum[["Post.Hour"]] <- as.integer(as.factor(facebook_enum[["Post.Hour"]]))
facebook_enum[["Post.Weekday"]] <- as.integer(as.factor(facebook_enum[["Post.Weekday"]]))
facebook_enum[["Paid"]] <- as.integer(as.factor(facebook_enum[["Paid"]]))
head(facebook_enum)
plot(density(sqrt(facebook_enum[["sqrt_lt_pc"]])))
plot(density(sqrt(facebook_enum[["sqrt_ptl"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
# Assuming 'facebook' is your data frame
scatterplotMatrix(facebook_enum[, c(
"sqrt_lt_pc",
"sqrt_ptl",
"Category",
"Type",
"Post.Month",
"Post.Hour",
"Post.Weekday",
"Paid"
)])
training <- subset(facebook_enum, obs_type="Training")
test <- subset(facebook_enum, obs_type="Validation")
model = lm(
`sqrt_lt_pc` ~
`sqrt_ptl` +
`Category` +
`Type` +
`Post.Month` +
`Post.Hour` +
`Post.Weekday` +
`Paid`,
data = training
)
summary(model)
plot(model)
avPlots(model)
vif(model)
# normalizing likes
facebook$like[is.na(facebook$like)] <- 0
facebook$log_like <- NA
facebook$log_like <- log(facebook$`like`)
facebook$like[facebook$like=='-Inf'] <- 0
# normalizing `Lifetime Post Total Reach`
facebook$lt_post_tot_reach <- NA
facebook$lt_post_tot_reach <- log(facebook$`Lifetime Post Total Reach`)
summary(model)
plot(model)
avPlots(model)
vif(model)
reduced_model <- lm(
`sqrt_lt_pc` ~
`Category` +
`Type` +
`Post.Hour` +
`Post.Weekday` +
`Paid`,
data = training
)
AIC(full_model, reduced_model)
AIC(model, reduced_model)
reduced_model <- lm(
`sqrt_lt_pc` ~
`sqrt_ptl` +
`Category` +
`Type` +
`Post.Hour` +
`Post.Weekday` +
`Paid`,
data = training
)
AIC(model, reduced_model)
summary(reduced_model)
plot(reduced_model)
avPlots(reduced_model)
vif(reduced_model)
reduced_model <- lm(
`sqrt_lt_pc` ~
`sqrt_ptl` +
`Category` +
`Type` +
# `Post.Hour` +
# `Post.Weekday` +
`Paid`,
data = training
)
summary(reduced_model)
plot(reduced_model)
avPlots(reduced_model)
vif(reduced_model)
AIC(model, reduced_model)
reduced_model <- lm(
`sqrt_lt_pc` ~
`sqrt_ptl` +
`Category` +
`Type` +
`Post.Hour` +
`Post.Weekday` +
`Paid`,
data = training
)
summary(reduced_model)
plot(reduced_model)
avPlots(reduced_model)
vif(reduced_model)
AIC(model, reduced_model)
knitr::opts_chunk$set(warning = FALSE)
setwd("C:/Users/jackw/Documents/R/Project")
# install.packages("car")
# install.packages("ggplot")
library(car)
library(ggplot2)
# library(GGally)
library(readr)
facebook <- na.omit(read_delim("facebook_updated.csv",
delim = ",", escape_double = FALSE, trim_ws = TRUE))
View(facebook)
column_names <- names(facebook)
print(column_names)
facebook_enum <- facebook
head(facebook_enum)
facebook_enum["sqrt_lt_pc"] <- NA
facebook_enum["sqrt_lt_pc"] <- sqrt(facebook_enum[["Lifetime.Post.Consumers"]])
facebook_enum["sqrt_ptl"] <- NA
facebook_enum[["sqrt_ptl"]] <- sqrt(facebook_enum[["Page.total.likes"]])
facebook_enum[["Category"]] <- as.integer(as.factor(facebook_enum[["Category"]]))
facebook_enum[["Type"]] <- as.integer(as.factor(facebook_enum[["Type"]]))
facebook_enum[["Post.Month"]] <- as.integer(as.factor(facebook_enum[["Post.Month"]]))
facebook_enum[["Post.Hour"]] <- as.integer(as.factor(facebook_enum[["Post.Hour"]]))
facebook_enum[["Post.Weekday"]] <- as.integer(as.factor(facebook_enum[["Post.Weekday"]]))
facebook_enum[["Paid"]] <- as.integer(as.factor(facebook_enum[["Paid"]]))
head(facebook_enum)
plot(density(sqrt(facebook_enum[["sqrt_lt_pc"]])))
plot(density(sqrt(facebook_enum[["sqrt_ptl"]])))
plot(density(facebook_enum[["Category"]]))
plot(density(facebook_enum[["Type"]]))
plot(density(facebook_enum[["Post.Month"]]))
plot(density(facebook_enum[["Post.Hour"]]))
plot(density(facebook_enum[["Post.Weekday"]]))
plot(density(facebook_enum[["Paid"]]))
# Assuming 'facebook' is your data frame
scatterplotMatrix(facebook_enum[, c(
"sqrt_lt_pc",
"sqrt_ptl",
"Category",
"Type",
"Post.Month",
"Post.Hour",
"Post.Weekday",
"Paid"
)])
training <- subset(facebook_enum, obs_type="Training")
test <- subset(facebook_enum, obs_type="Validation")
model = lm(
`sqrt_lt_pc` ~
`sqrt_ptl` +
`Category` +
`Type` +
`Post.Month` +
`Post.Hour` +
`Post.Weekday` +
`Paid`,
data = training
)
summary(model)
plot(model)
avPlots(model)
vif(model)
reduced_model <- lm(
`sqrt_lt_pc` ~
`sqrt_ptl` +
`Category` +
`Type` +
`Post.Hour` +
`Post.Weekday` +
`Paid`,
data = training
)
summary(reduced_model)
plot(reduced_model)
avPlots(reduced_model)
vif(reduced_model)
AIC(model, reduced_model)
reduced_model <- lm(
`sqrt_lt_pc` ~
`sqrt_ptl` +
`Category` +
`Type` +
`Post.Hour` +
`Post.Month` +
`Post.Weekday` +
`Paid`,
data = training
)
reduced_model <- lm(
`sqrt_lt_pc` ~
# `sqrt_ptl` +
`Category` +
`Type` +
`Post.Hour` +
`Post.Month` +
`Post.Weekday` +
`Paid`,
data = training
)
summary(reduced_model)
plot(reduced_model)
avPlots(reduced_model)
vif(reduced_model)
AIC(model, reduced_model)
